// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoleMgtMVC.Data;

namespace RoleMgtMVC.Migrations
{
    [DbContext(typeof(RoleMgtMVCContext))]
    partial class RoleMgtMVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoleMgtMVC.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("SessionKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 9, 17, 13, 26, 8, 951, DateTimeKind.Local).AddTicks(9352),
                            Email = "sachithsujeewa@gmail.com",
                            ExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sachith",
                            IsActive = true,
                            LastName = "Sujeewa",
                            PasswordHash = "T0znWEIGTQudqJKcFkOfOGxi9fNB3QG4A2B06GuzHeU=",
                            Salt = new byte[] { 119, 46, 5, 112, 249, 169, 243, 117, 168, 167, 241, 125, 199, 138, 48, 65 },
                            SessionKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserRoleId = 4
                        });
                });

            modelBuilder.Entity("RoleMgtMVC.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = 1,
                            Name = "External"
                        },
                        new
                        {
                            Id = 2,
                            Level = 2,
                            Name = "Internal"
                        },
                        new
                        {
                            Id = 3,
                            Level = 3,
                            Name = "Lead"
                        },
                        new
                        {
                            Id = 4,
                            Level = 4,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("RoleMgtMVC.Models.User", b =>
                {
                    b.HasOne("RoleMgtMVC.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
